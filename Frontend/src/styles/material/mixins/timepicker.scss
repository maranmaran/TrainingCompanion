@import "~@angular/material/theming";

//lightness 0darkest 100lightest
@function get-darker-color($color) {
 
  // if light.. darken more
  @if (lightness($color) > 50) { 
    @return darken($color, 5%); 
  } 

  @return $color;
}

@function get-conditioned-text-color($background, $lightness-condition, $invert-on-light, $current-text-color) {
  $inverted-text-color: invert($current-text-color);

  $light: false;
  $result: $current-text-color;
  
  @if (lightness($background) > $lightness-condition) {
    $light: true;
  }
  
  // light and invert
  @if ($invert-on-light and $light) {
    @return green;
    // @return $inverted-text-color;
  } 

  @if ($invert-on-light == false and $light) {
    @return blue;
    // @return $current-text-color;
  } 

  // dark and invert
  @if ($invert-on-light and $light == false) {
    @return yellow;
    // @return $current-text-color;
  } 

  @if ($invert-on-light == false and $light == false) {
    @return red;
    // @return $inverted-text-color;
  } 
}

@function enchance-brightness($background, $percentage) {
  @if (lightness($background) < 50) { // dark
    @return lighten($background, $percentage); 
  } @else { // light
    @return darken($background, $percentage);
  }
}


@mixin timepicker-component-theme($theme) {


  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  $foreground-palette: map-get($theme, foreground); //palette
  $background-palette: map-get($theme, background); //palette

  $theme-text: map-get($foreground-palette, text);

  $theme-dialog: map-get($background-palette, dialog);
  $theme-background: map-get($background-palette, background);
  $theme-card: map-get($background-palette, card);


  // component with manual inputs -- this actually wraps everything
  .ngx-timepicker {
    border-bottom: none !important;

    .ngx-timepicker-control--active:after, *:focus:after, button:focus:active:after, .period-control__button:not(.period-control__button--disabled):focus:after   {
      border-bottom: none !important;
      background-color: unset !important;
    }

    path {
      fill: $theme-text !important; // svg color
    }

    .ngx-timepicker-control {
      padding-left: 0px !important;
    }

    .period-selector {
      background: $theme-dialog !important;
      border-radius: 5% !important;
      width: calc(100% + 10px) !important;
      right: calc(-110%) !important;

      &__button {
        color: $theme-text !important;

        &:focus {
          background-color: lighten($theme-dialog, 5%) !important;
        }

        &--active {
          color: mat-color($accent) !important;
        }
      }
    }

    .ngx-timepicker-control__input {
      background: $theme-dialog;
    }

    .ngx-timepicker-control__arrow,
    .period-control__arrow {
      color: $theme-text !important;
    }
  }

  // backdrop behind clock component
  .timepicker-overlay {
    z-index: 1000 !important;
  }

  // clock component
  .timepicker {
    // --clock-hand-color: mat-color($accent) !important;
    --clock-hand-color: red;

    // UPPER DIAL
    .timepicker-dial {

      &__time {
        // color: $theme-text !important;
        color: get-conditioned-text-color(mat-color($primary), 50, true, $theme-text) !important;
      }

      &__container {
        justify-content: center !important;
      }
    }

    .timepicker-period__btn {
      // color: $theme-text !important;
      color: get-conditioned-text-color(mat-color($primary), 50, true, $theme-text) !important;


      &:focus {
        background-color: enchance-brightness(mat-color($primary), 30%) !important;
      }
    }

    // Bottom - CANCEL OK buttons
    .timepicker-button {
      color: mat-color($accent) !important;
    }

    .clock-face {
      background-color: get-darker-color($theme-card) !important;

      &__number {

        &--outer > span, > span {
          cursor: pointer !important;
          // color: white !important;
          color: get-conditioned-text-color(mat-color($accent), 50, true, $theme-text) !important;
        }

        > span.active {
          background-color: mat-color($accent) !important;
          color: get-conditioned-text-color(mat-color($accent), 50, true, $theme-text) !important;
        }
      }
    }

    &__header {
      background-color: mat-color($primary) !important;
    }
    &__body {
      background-color: $theme-background !important;
    }
    &__actions {
      background-color: $theme-background !important;
    }
  }
}
